/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PoolListData,
  PoolListDataInterface,
} from "../../../contracts/data/PoolListData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolAddress",
        type: "address",
      },
    ],
    name: "addMyPoolAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
    ],
    name: "getMyPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061030e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631599a352146100465780635e52fe5014610076578063a36cc98114610092575b600080fd5b610060600480360381019061005b9190610241565b6100c2565b60405161006d919061027d565b60405180910390f35b610090600480360381019061008b9190610298565b61012a565b005b6100ac60048036038101906100a79190610241565b6101ab565b6040516100b9919061027d565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061020e826101e3565b9050919050565b61021e81610203565b811461022957600080fd5b50565b60008135905061023b81610215565b92915050565b600060208284031215610257576102566101de565b5b60006102658482850161022c565b91505092915050565b61027781610203565b82525050565b6000602082019050610292600083018461026e565b92915050565b600080604083850312156102af576102ae6101de565b5b60006102bd8582860161022c565b92505060206102ce8582860161022c565b915050925092905056fea2646970667358221220b1772dba2d8b32943a10b8fb737fbb38295d616802deb9570355d0ab0ce5707564736f6c63430008110033";

type PoolListDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolListDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolListData__factory extends ContractFactory {
  constructor(...args: PoolListDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolListData> {
    return super.deploy(overrides || {}) as Promise<PoolListData>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolListData {
    return super.attach(address) as PoolListData;
  }
  override connect(signer: Signer): PoolListData__factory {
    return super.connect(signer) as PoolListData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolListDataInterface {
    return new utils.Interface(_abi) as PoolListDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolListData {
    return new Contract(address, _abi, signerOrProvider) as PoolListData;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PoolListData,
  PoolListDataInterface,
} from "../../../contracts/data/PoolListData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_poolAddress",
        type: "address",
      },
    ],
    name: "addMyPoolAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_ownerAddress",
        type: "address",
      },
    ],
    name: "getMyPoolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolAddres",
        type: "address",
      },
    ],
    name: "getSearchWalletAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "searchWalletAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061021f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631599a3521461005c578063219092d4146100a45780635e52fe50146100cd578063903ae3b314610123578063a36cc9811461014f575b600080fd5b61008861006a366004610194565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b03909116815260200160405180910390f35b6100886100b2366004610194565b6001602052600090815260409020546001600160a01b031681565b6101216100db3660046101b6565b6001600160a01b039182166000818152602081815260408083208054969095166001600160a01b0319968716811790955593825260019052919091208054909216179055565b005b610088610131366004610194565b6001600160a01b039081166000908152600160205260409020541690565b61008861015d366004610194565b6000602081905290815260409020546001600160a01b031681565b80356001600160a01b038116811461018f57600080fd5b919050565b6000602082840312156101a657600080fd5b6101af82610178565b9392505050565b600080604083850312156101c957600080fd5b6101d283610178565b91506101e060208401610178565b9050925092905056fea2646970667358221220186eb39b54f6e39130bd8b13ae7eda38aa73628c839fadf4e21f4e2e38e797cc64736f6c63430008110033";

type PoolListDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoolListDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PoolListData__factory extends ContractFactory {
  constructor(...args: PoolListDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PoolListData> {
    return super.deploy(overrides || {}) as Promise<PoolListData>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PoolListData {
    return super.attach(address) as PoolListData;
  }
  override connect(signer: Signer): PoolListData__factory {
    return super.connect(signer) as PoolListData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolListDataInterface {
    return new utils.Interface(_abi) as PoolListDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolListData {
    return new Contract(address, _abi, signerOrProvider) as PoolListData;
  }
}

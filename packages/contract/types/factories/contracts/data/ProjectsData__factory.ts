/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProjectsData,
  ProjectsDataInterface,
} from "../../../contracts/data/ProjectsData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectOwnerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_projectPoolAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_belongDaoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_projectName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_projectContents",
        type: "string",
      },
      {
        internalType: "string",
        name: "_projectReword",
        type: "string",
      },
    ],
    name: "addProjects",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allProjectsList",
    outputs: [
      {
        internalType: "address",
        name: "projectAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "belongDaoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "projectName",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectContents",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectReword",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "creationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eachProjectsList",
    outputs: [
      {
        internalType: "address",
        name: "projectAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "belongDaoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "projectName",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectContents",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectReword",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "creationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProjectList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "projectAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "belongDaoAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "projectName",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectContents",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectReword",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "creationTime",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStruct.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectOwnerAddress",
        type: "address",
      },
    ],
    name: "getEachProjectList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "projectAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "belongDaoAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "projectName",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectContents",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectReword",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "creationTime",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStruct.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506117d6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80635874a8121461005c57806358cedf5714610091578063a444a193146100c1578063c327dc3f146100f6578063c34b28f514610114575b600080fd5b61007660048036038101906100719190610f0b565b610130565b60405161008896959493929190610ff9565b60405180910390f35b6100ab60048036038101906100a6919061106f565b610361565b6040516100b8919061125d565b60405180910390f35b6100db60048036038101906100d6919061127f565b61066a565b6040516100ed96959493929190610ff9565b60405180910390f35b6100fe61088e565b60405161010b919061125d565b60405180910390f35b61012e600480360381019061012991906113e1565b610b59565b005b6000602052816000526040600020818154811061014c57600080fd5b9060005260206000209060060201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546101bc906114f1565b80601f01602080910402602001604051908101604052809291908181526020018280546101e8906114f1565b80156102355780601f1061020a57610100808354040283529160200191610235565b820191906000526020600020905b81548152906001019060200180831161021857829003601f168201915b50505050509080600301805461024a906114f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610276906114f1565b80156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b5050505050908060040180546102d8906114f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610304906114f1565b80156103515780601f1061032657610100808354040283529160200191610351565b820191906000526020600020905b81548152906001019060200180831161033457829003601f168201915b5050505050908060050154905086565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561065f57838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546104a0906114f1565b80601f01602080910402602001604051908101604052809291908181526020018280546104cc906114f1565b80156105195780601f106104ee57610100808354040283529160200191610519565b820191906000526020600020905b8154815290600101906020018083116104fc57829003601f168201915b50505050508152602001600382018054610532906114f1565b80601f016020809104026020016040519081016040528092919081815260200182805461055e906114f1565b80156105ab5780601f10610580576101008083540402835291602001916105ab565b820191906000526020600020905b81548152906001019060200180831161058e57829003601f168201915b505050505081526020016004820180546105c4906114f1565b80601f01602080910402602001604051908101604052809291908181526020018280546105f0906114f1565b801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b50505050508152602001600582015481525050815260200190600101906103c1565b505050509050919050565b6001818154811061067a57600080fd5b90600052602060002090600602016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020180546106e9906114f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610715906114f1565b80156107625780601f1061073757610100808354040283529160200191610762565b820191906000526020600020905b81548152906001019060200180831161074557829003601f168201915b505050505090806003018054610777906114f1565b80601f01602080910402602001604051908101604052809291908181526020018280546107a3906114f1565b80156107f05780601f106107c5576101008083540402835291602001916107f0565b820191906000526020600020905b8154815290600101906020018083116107d357829003601f168201915b505050505090806004018054610805906114f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610831906114f1565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b5050505050908060050154905086565b60606001805480602002602001604051908101604052809291908181526020016000905b82821015610b5057838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610991906114f1565b80601f01602080910402602001604051908101604052809291908181526020018280546109bd906114f1565b8015610a0a5780601f106109df57610100808354040283529160200191610a0a565b820191906000526020600020905b8154815290600101906020018083116109ed57829003601f168201915b50505050508152602001600382018054610a23906114f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4f906114f1565b8015610a9c5780601f10610a7157610100808354040283529160200191610a9c565b820191906000526020600020905b815481529060010190602001808311610a7f57829003601f168201915b50505050508152602001600482018054610ab5906114f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae1906114f1565b8015610b2e5780601f10610b0357610100808354040283529160200191610b2e565b820191906000526020600020905b815481529060010190602001808311610b1157829003601f168201915b50505050508152602001600582015481525050815260200190600101906108b2565b50505050905090565b60004290506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610cc191906116ce565b506060820151816003019081610cd791906116ce565b506080820151816004019081610ced91906116ce565b5060a08201518160050155505060016040518060c001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610e2191906116ce565b506060820151816003019081610e3791906116ce565b506080820151816004019081610e4d91906116ce565b5060a08201518160050155505050505050505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ea282610e77565b9050919050565b610eb281610e97565b8114610ebd57600080fd5b50565b600081359050610ecf81610ea9565b92915050565b6000819050919050565b610ee881610ed5565b8114610ef357600080fd5b50565b600081359050610f0581610edf565b92915050565b60008060408385031215610f2257610f21610e6d565b5b6000610f3085828601610ec0565b9250506020610f4185828601610ef6565b9150509250929050565b610f5481610e97565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f94578082015181840152602081019050610f79565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fbc82610f5a565b610fc68185610f65565b9350610fd6818560208601610f76565b610fdf81610fa0565b840191505092915050565b610ff381610ed5565b82525050565b600060c08201905061100e6000830189610f4b565b61101b6020830188610f4b565b818103604083015261102d8187610fb1565b905081810360608301526110418186610fb1565b905081810360808301526110558185610fb1565b905061106460a0830184610fea565b979650505050505050565b60006020828403121561108557611084610e6d565b5b600061109384828501610ec0565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6110d181610e97565b82525050565b600082825260208201905092915050565b60006110f382610f5a565b6110fd81856110d7565b935061110d818560208601610f76565b61111681610fa0565b840191505092915050565b61112a81610ed5565b82525050565b600060c08301600083015161114860008601826110c8565b50602083015161115b60208601826110c8565b506040830151848203604086015261117382826110e8565b9150506060830151848203606086015261118d82826110e8565b915050608083015184820360808601526111a782826110e8565b91505060a08301516111bc60a0860182611121565b508091505092915050565b60006111d38383611130565b905092915050565b6000602082019050919050565b60006111f38261109c565b6111fd81856110a7565b93508360208202850161120f856110b8565b8060005b8581101561124b578484038952815161122c85826111c7565b9450611237836111db565b925060208a01995050600181019050611213565b50829750879550505050505092915050565b6000602082019050818103600083015261127781846111e8565b905092915050565b60006020828403121561129557611294610e6d565b5b60006112a384828501610ef6565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112ee82610fa0565b810181811067ffffffffffffffff8211171561130d5761130c6112b6565b5b80604052505050565b6000611320610e63565b905061132c82826112e5565b919050565b600067ffffffffffffffff82111561134c5761134b6112b6565b5b61135582610fa0565b9050602081019050919050565b82818337600083830152505050565b600061138461137f84611331565b611316565b9050828152602081018484840111156113a05761139f6112b1565b5b6113ab848285611362565b509392505050565b600082601f8301126113c8576113c76112ac565b5b81356113d8848260208601611371565b91505092915050565b60008060008060008060c087890312156113fe576113fd610e6d565b5b600061140c89828a01610ec0565b965050602061141d89828a01610ec0565b955050604061142e89828a01610ec0565b945050606087013567ffffffffffffffff81111561144f5761144e610e72565b5b61145b89828a016113b3565b935050608087013567ffffffffffffffff81111561147c5761147b610e72565b5b61148889828a016113b3565b92505060a087013567ffffffffffffffff8111156114a9576114a8610e72565b5b6114b589828a016113b3565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061150957607f821691505b60208210810361151c5761151b6114c2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611547565b61158e8683611547565b95508019841693508086168417925050509392505050565b6000819050919050565b60006115cb6115c66115c184610ed5565b6115a6565b610ed5565b9050919050565b6000819050919050565b6115e5836115b0565b6115f96115f1826115d2565b848454611554565b825550505050565b600090565b61160e611601565b6116198184846115dc565b505050565b5b8181101561163d57611632600082611606565b60018101905061161f565b5050565b601f8211156116825761165381611522565b61165c84611537565b8101602085101561166b578190505b61167f61167785611537565b83018261161e565b50505b505050565b600082821c905092915050565b60006116a560001984600802611687565b1980831691505092915050565b60006116be8383611694565b9150826002028217905092915050565b6116d782610f5a565b67ffffffffffffffff8111156116f0576116ef6112b6565b5b6116fa82546114f1565b611705828285611641565b600060209050601f8311600181146117385760008415611726578287015190505b61173085826116b2565b865550611798565b601f19841661174686611522565b60005b8281101561176e57848901518255600182019150602085019450602081019050611749565b8683101561178b5784890151611787601f891682611694565b8355505b6001600288020188555050505b50505050505056fea26469706673582212202ea1fe4aafd77c7fa67b50f3e1434c43abba2f83a47a23e5bc58acbe25afb87264736f6c63430008110033";

type ProjectsDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProjectsDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProjectsData__factory extends ContractFactory {
  constructor(...args: ProjectsDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProjectsData> {
    return super.deploy(overrides || {}) as Promise<ProjectsData>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProjectsData {
    return super.attach(address) as ProjectsData;
  }
  override connect(signer: Signer): ProjectsData__factory {
    return super.connect(signer) as ProjectsData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProjectsDataInterface {
    return new utils.Interface(_abi) as ProjectsDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProjectsData {
    return new Contract(address, _abi, signerOrProvider) as ProjectsData;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CherFaucet,
  CherFaucetInterface,
} from "../../contracts/CherFaucet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CHER_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cher",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFaucetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "CHERAddress",
        type: "address",
      },
    ],
    name: "setCHER",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527338d4172dde4e50a8cdd8b39abc572443d18ad72d6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100c557600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cdb806101166000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610114578063de5f72fd1461013f578063f1f959a614610149578063f6acee23146101745761007b565b806313af40351461008057806322fb6ca6146100a95780633ccfd60b146100d45780635e001c34146100eb575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a291906108cd565b61019f565b005b3480156100b557600080fd5b506100be61023d565b6040516100cb9190610909565b60405180910390f35b3480156100e057600080fd5b506100e9610261565b005b3480156100f757600080fd5b50610112600480360381019061010d91906108cd565b610486565b005b34801561012057600080fd5b50610129610564565b6040516101369190610909565b60405180910390f35b61014761058a565b005b34801561015557600080fd5b5061015e6107a1565b60405161016b919061093d565b60405180910390f35b34801561018057600080fd5b50610189610844565b60405161019691906109b7565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101f957600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146102bb57600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103189190610909565b602060405180830381865afa158015610335573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035991906109fe565b90506000811161039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610a88565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016103fd929190610aa8565b6020604051808303816000875af115801561041c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104409190610b09565b905080610482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047990610b82565b60405180910390fd5b5050565b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146104e057600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003410156105ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c590610c14565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062b9190610909565b602060405180830381865afa158015610648573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066c91906109fe565b10156106ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a490610a88565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb336103e8346106fc9190610c63565b6040518363ffffffff1660e01b8152600401610719929190610aa8565b6020604051808303816000875af1158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190610b09565b90508061079e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079590610b82565b60405180910390fd5b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107fe9190610909565b602060405180830381865afa15801561081b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083f91906109fe565b905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061089a8261086f565b9050919050565b6108aa8161088f565b81146108b557600080fd5b50565b6000813590506108c7816108a1565b92915050565b6000602082840312156108e3576108e261086a565b5b60006108f1848285016108b8565b91505092915050565b6109038161088f565b82525050565b600060208201905061091e60008301846108fa565b92915050565b6000819050919050565b61093781610924565b82525050565b6000602082019050610952600083018461092e565b92915050565b6000819050919050565b600061097d6109786109738461086f565b610958565b61086f565b9050919050565b600061098f82610962565b9050919050565b60006109a182610984565b9050919050565b6109b181610996565b82525050565b60006020820190506109cc60008301846109a8565b92915050565b6109db81610924565b81146109e657600080fd5b50565b6000815190506109f8816109d2565b92915050565b600060208284031215610a1457610a1361086a565b5b6000610a22848285016109e9565b91505092915050565b600082825260208201905092915050565b7f4e6f204348455200000000000000000000000000000000000000000000000000600082015250565b6000610a72600783610a2b565b9150610a7d82610a3c565b602082019050919050565b60006020820190508181036000830152610aa181610a65565b9050919050565b6000604082019050610abd60008301856108fa565b610aca602083018461092e565b9392505050565b60008115159050919050565b610ae681610ad1565b8114610af157600080fd5b50565b600081519050610b0381610add565b92915050565b600060208284031215610b1f57610b1e61086a565b5b6000610b2d84828501610af4565b91505092915050565b7f4348455220636f756c64206e6f742062652073656e742e000000000000000000600082015250565b6000610b6c601783610a2b565b9150610b7782610b36565b602082019050919050565b60006020820190508181036000830152610b9b81610b5f565b9050919050565b7f4e617469766520746f6b656e2061726520726571756972656420746f2072656360008201527f6569766520434845520000000000000000000000000000000000000000000000602082015250565b6000610bfe602983610a2b565b9150610c0982610ba2565b604082019050919050565b60006020820190508181036000830152610c2d81610bf1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c6e82610924565b9150610c7983610924565b9250828202610c8781610924565b91508282048414831517610c9e57610c9d610c34565b5b509291505056fea2646970667358221220ede68468bbbcea43be40450fb67706989f63ddf7b61273da27fc26a7d8502f1264736f6c63430008110033";

type CherFaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CherFaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CherFaucet__factory extends ContractFactory {
  constructor(...args: CherFaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CherFaucet> {
    return super.deploy(overrides || {}) as Promise<CherFaucet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CherFaucet {
    return super.attach(address) as CherFaucet;
  }
  override connect(signer: Signer): CherFaucet__factory {
    return super.connect(signer) as CherFaucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CherFaucetInterface {
    return new utils.Interface(_abi) as CherFaucetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CherFaucet {
    return new Contract(address, _abi, signerOrProvider) as CherFaucet;
  }
}

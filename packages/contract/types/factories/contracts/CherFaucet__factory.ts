/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  CherFaucet,
  CherFaucetInterface,
} from "../../contracts/CherFaucet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CHER_CONTRACT_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cher",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "faucet",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFaucetBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "CHERAddress",
        type: "address",
      },
    ],
    name: "setCHER",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600080547338d4172dde4e50a8cdd8b39abc572443d18ad72d6001600160a01b0319918216811790925560018054909116909117905534801561004657600080fd5b50600280546001600160a01b03191633179055610642806100686000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610114578063de5f72fd14610134578063f1f959a61461013c578063f6acee231461015f57600080fd5b806313af40351461008057806322fb6ca6146100a25780633ccfd60b146100df5780635e001c34146100f4575b600080fd5b34801561008c57600080fd5b506100a061009b366004610576565b61017f565b005b3480156100ae57600080fd5b506000546100c2906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100eb57600080fd5b506100a06101b8565b34801561010057600080fd5b506100a061010f366004610576565b610340565b34801561012057600080fd5b506002546100c2906001600160a01b031681565b6100a0610383565b34801561014857600080fd5b50610151610504565b6040519081526020016100d6565b34801561016b57600080fd5b506001546100c2906001600160a01b031681565b6002546001600160a01b0316331461019657600080fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b031633146101cf57600080fd5b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610218573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023c91906105a6565b90506000811161027d5760405162461bcd60e51b815260206004820152600760248201526627379021a422a960c91b60448201526064015b60405180910390fd5b60015460405163a9059cbb60e01b8152336004820152602481018390526000916001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f391906105bf565b90508061033c5760405162461bcd60e51b815260206004820152601760248201527621a422a91031b7bab632103737ba1031329039b2b73a1760491b6044820152606401610274565b5050565b6002546001600160a01b0316331461035757600080fd5b600080546001600160a01b039092166001600160a01b0319928316811790915560018054909216179055565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156103cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f091906105a6565b10156104285760405162461bcd60e51b815260206004820152600760248201526627379021a422a960c91b6044820152606401610274565b6001546000906001600160a01b031663a9059cbb33610449346103e86105e1565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b891906105bf565b9050806105015760405162461bcd60e51b815260206004820152601760248201527621a422a91031b7bab632103737ba1031329039b2b73a1760491b6044820152606401610274565b50565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561054d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057191906105a6565b905090565b60006020828403121561058857600080fd5b81356001600160a01b038116811461059f57600080fd5b9392505050565b6000602082840312156105b857600080fd5b5051919050565b6000602082840312156105d157600080fd5b8151801515811461059f57600080fd5b808202811582820484141761060657634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220a4a59d7aff4a79a0349c638c22e884853beeca62ef7d310e9c028dd66e9e1b6d64736f6c63430008110033";

type CherFaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CherFaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CherFaucet__factory extends ContractFactory {
  constructor(...args: CherFaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CherFaucet> {
    return super.deploy(overrides || {}) as Promise<CherFaucet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CherFaucet {
    return super.attach(address) as CherFaucet;
  }
  override connect(signer: Signer): CherFaucet__factory {
    return super.connect(signer) as CherFaucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CherFaucetInterface {
    return new utils.Interface(_abi) as CherFaucetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CherFaucet {
    return new Contract(address, _abi, signerOrProvider) as CherFaucet;
  }
}

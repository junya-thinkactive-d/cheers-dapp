/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ProjectsData,
  ProjectsDataInterface,
} from "../../../contracts/data/ProjectsData";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectOwnerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_projectPoolAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_belongDaoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_projectName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_projectContents",
        type: "string",
      },
      {
        internalType: "string",
        name: "_projectReword",
        type: "string",
      },
    ],
    name: "addProjects",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allProjectsList",
    outputs: [
      {
        internalType: "address",
        name: "projectOwnerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "belongDaoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "projectName",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectContents",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectReword",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "creationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eachProjectsList",
    outputs: [
      {
        internalType: "address",
        name: "projectOwnerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "belongDaoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "projectName",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectContents",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectReword",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "creationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProjectList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "projectOwnerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "projectAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "belongDaoAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "projectName",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectContents",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectReword",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "creationTime",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStruct.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectOwnerAddress",
        type: "address",
      },
    ],
    name: "getEachProjectList",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "projectOwnerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "projectAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "belongDaoAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "projectName",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectContents",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectReword",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "creationTime",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStruct.Project[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectPoolAddress",
        type: "address",
      },
    ],
    name: "getProjectAddressToProjectData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "projectOwnerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "projectAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "belongDaoAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "projectName",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectContents",
            type: "string",
          },
          {
            internalType: "string",
            name: "projectReword",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "creationTime",
            type: "uint256",
          },
        ],
        internalType: "struct SharedStruct.Project",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "projectAddressToProjectData",
    outputs: [
      {
        internalType: "address",
        name: "projectOwnerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "projectAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "belongDaoAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "projectName",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectContents",
        type: "string",
      },
      {
        internalType: "string",
        name: "projectReword",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "creationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506122bb806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636e0153af1161005b5780636e0153af1461011e578063a444a1931461014e578063c327dc3f14610184578063c34b28f5146101a25761007d565b80630ffd73b8146100825780635874a812146100b857806358cedf57146100ee575b600080fd5b61009c600480360381019061009791906118cd565b6101be565b6040516100af97969594939291906119b2565b60405180910390f35b6100d260048036038101906100cd9190611a62565b6103f8565b6040516100e597969594939291906119b2565b60405180910390f35b610108600480360381019061010391906118cd565b61064f565b6040516101159190611c76565b60405180910390f35b610138600480360381019061013391906118cd565b6109af565b6040516101459190611d42565b60405180910390f35b61016860048036038101906101639190611d64565b610cc9565b60405161017b97969594939291906119b2565b60405180910390f35b61018c610f13565b6040516101999190611c76565b60405180910390f35b6101bc60048036038101906101b79190611ec6565b611234565b005b60006020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600301805461025390611fd6565b80601f016020809104026020016040519081016040528092919081815260200182805461027f90611fd6565b80156102cc5780601f106102a1576101008083540402835291602001916102cc565b820191906000526020600020905b8154815290600101906020018083116102af57829003601f168201915b5050505050908060040180546102e190611fd6565b80601f016020809104026020016040519081016040528092919081815260200182805461030d90611fd6565b801561035a5780601f1061032f5761010080835404028352916020019161035a565b820191906000526020600020905b81548152906001019060200180831161033d57829003601f168201915b50505050509080600501805461036f90611fd6565b80601f016020809104026020016040519081016040528092919081815260200182805461039b90611fd6565b80156103e85780601f106103bd576101008083540402835291602001916103e8565b820191906000526020600020905b8154815290600101906020018083116103cb57829003601f168201915b5050505050908060060154905087565b6001602052816000526040600020818154811061041457600080fd5b9060005260206000209060070201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030180546104aa90611fd6565b80601f01602080910402602001604051908101604052809291908181526020018280546104d690611fd6565b80156105235780601f106104f857610100808354040283529160200191610523565b820191906000526020600020905b81548152906001019060200180831161050657829003601f168201915b50505050509080600401805461053890611fd6565b80601f016020809104026020016040519081016040528092919081815260200182805461056490611fd6565b80156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b5050505050908060050180546105c690611fd6565b80601f01602080910402602001604051908101604052809291908181526020018280546105f290611fd6565b801561063f5780601f106106145761010080835404028352916020019161063f565b820191906000526020600020905b81548152906001019060200180831161062257829003601f168201915b5050505050908060060154905087565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156109a457838290600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820180546107e590611fd6565b80601f016020809104026020016040519081016040528092919081815260200182805461081190611fd6565b801561085e5780601f106108335761010080835404028352916020019161085e565b820191906000526020600020905b81548152906001019060200180831161084157829003601f168201915b5050505050815260200160048201805461087790611fd6565b80601f01602080910402602001604051908101604052809291908181526020018280546108a390611fd6565b80156108f05780601f106108c5576101008083540402835291602001916108f0565b820191906000526020600020905b8154815290600101906020018083116108d357829003601f168201915b5050505050815260200160058201805461090990611fd6565b80601f016020809104026020016040519081016040528092919081815260200182805461093590611fd6565b80156109825780601f1061095757610100808354040283529160200191610982565b820191906000526020600020905b81548152906001019060200180831161096557829003601f168201915b50505050508152602001600682015481525050815260200190600101906106b0565b505050509050919050565b6109b76117dc565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610b1290611fd6565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3e90611fd6565b8015610b8b5780601f10610b6057610100808354040283529160200191610b8b565b820191906000526020600020905b815481529060010190602001808311610b6e57829003601f168201915b50505050508152602001600482018054610ba490611fd6565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd090611fd6565b8015610c1d5780601f10610bf257610100808354040283529160200191610c1d565b820191906000526020600020905b815481529060010190602001808311610c0057829003601f168201915b50505050508152602001600582018054610c3690611fd6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6290611fd6565b8015610caf5780601f10610c8457610100808354040283529160200191610caf565b820191906000526020600020905b815481529060010190602001808311610c9257829003601f168201915b505050505081526020016006820154815250509050919050565b60028181548110610cd957600080fd5b90600052602060002090600702016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003018054610d6e90611fd6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9a90611fd6565b8015610de75780601f10610dbc57610100808354040283529160200191610de7565b820191906000526020600020905b815481529060010190602001808311610dca57829003601f168201915b505050505090806004018054610dfc90611fd6565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2890611fd6565b8015610e755780601f10610e4a57610100808354040283529160200191610e75565b820191906000526020600020905b815481529060010190602001808311610e5857829003601f168201915b505050505090806005018054610e8a90611fd6565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb690611fd6565b8015610f035780601f10610ed857610100808354040283529160200191610f03565b820191906000526020600020905b815481529060010190602001808311610ee657829003601f168201915b5050505050908060060154905087565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561122b57838290600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461106c90611fd6565b80601f016020809104026020016040519081016040528092919081815260200182805461109890611fd6565b80156110e55780601f106110ba576101008083540402835291602001916110e5565b820191906000526020600020905b8154815290600101906020018083116110c857829003601f168201915b505050505081526020016004820180546110fe90611fd6565b80601f016020809104026020016040519081016040528092919081815260200182805461112a90611fd6565b80156111775780601f1061114c57610100808354040283529160200191611177565b820191906000526020600020905b81548152906001019060200180831161115a57829003601f168201915b5050505050815260200160058201805461119090611fd6565b80601f01602080910402602001604051908101604052809291908181526020018280546111bc90611fd6565b80156112095780601f106111de57610100808354040283529160200191611209565b820191906000526020600020905b8154815290600101906020018083116111ec57829003601f168201915b5050505050815260200160068201548152505081526020019060010190610f37565b50505050905090565b6000429050600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301908161140091906121b3565b50608082015181600401908161141691906121b3565b5060a082015181600501908161142c91906121b3565b5060c08201518160060155505060026040518060e001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff16815260200186815260200185815260200184815260200183815250908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816115c391906121b3565b5060808201518160040190816115d991906121b3565b5060a08201518160050190816115ef91906121b3565b5060c0820151816006015550506040518060e001604052808873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001838152602001828152506000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301908161179991906121b3565b5060808201518160040190816117af91906121b3565b5060a08201518160050190816117c591906121b3565b5060c0820151816006015590505050505050505050565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160608152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061189a8261186f565b9050919050565b6118aa8161188f565b81146118b557600080fd5b50565b6000813590506118c7816118a1565b92915050565b6000602082840312156118e3576118e2611865565b5b60006118f1848285016118b8565b91505092915050565b6119038161188f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611943578082015181840152602081019050611928565b60008484015250505050565b6000601f19601f8301169050919050565b600061196b82611909565b6119758185611914565b9350611985818560208601611925565b61198e8161194f565b840191505092915050565b6000819050919050565b6119ac81611999565b82525050565b600060e0820190506119c7600083018a6118fa565b6119d460208301896118fa565b6119e160408301886118fa565b81810360608301526119f38187611960565b90508181036080830152611a078186611960565b905081810360a0830152611a1b8185611960565b9050611a2a60c08301846119a3565b98975050505050505050565b611a3f81611999565b8114611a4a57600080fd5b50565b600081359050611a5c81611a36565b92915050565b60008060408385031215611a7957611a78611865565b5b6000611a87858286016118b8565b9250506020611a9885828601611a4d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ad78161188f565b82525050565b600082825260208201905092915050565b6000611af982611909565b611b038185611add565b9350611b13818560208601611925565b611b1c8161194f565b840191505092915050565b611b3081611999565b82525050565b600060e083016000830151611b4e6000860182611ace565b506020830151611b616020860182611ace565b506040830151611b746040860182611ace565b5060608301518482036060860152611b8c8282611aee565b91505060808301518482036080860152611ba68282611aee565b91505060a083015184820360a0860152611bc08282611aee565b91505060c0830151611bd560c0860182611b27565b508091505092915050565b6000611bec8383611b36565b905092915050565b6000602082019050919050565b6000611c0c82611aa2565b611c168185611aad565b935083602082028501611c2885611abe565b8060005b85811015611c645784840389528151611c458582611be0565b9450611c5083611bf4565b925060208a01995050600181019050611c2c565b50829750879550505050505092915050565b60006020820190508181036000830152611c908184611c01565b905092915050565b600060e083016000830151611cb06000860182611ace565b506020830151611cc36020860182611ace565b506040830151611cd66040860182611ace565b5060608301518482036060860152611cee8282611aee565b91505060808301518482036080860152611d088282611aee565b91505060a083015184820360a0860152611d228282611aee565b91505060c0830151611d3760c0860182611b27565b508091505092915050565b60006020820190508181036000830152611d5c8184611c98565b905092915050565b600060208284031215611d7a57611d79611865565b5b6000611d8884828501611a4d565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611dd38261194f565b810181811067ffffffffffffffff82111715611df257611df1611d9b565b5b80604052505050565b6000611e0561185b565b9050611e118282611dca565b919050565b600067ffffffffffffffff821115611e3157611e30611d9b565b5b611e3a8261194f565b9050602081019050919050565b82818337600083830152505050565b6000611e69611e6484611e16565b611dfb565b905082815260208101848484011115611e8557611e84611d96565b5b611e90848285611e47565b509392505050565b600082601f830112611ead57611eac611d91565b5b8135611ebd848260208601611e56565b91505092915050565b60008060008060008060c08789031215611ee357611ee2611865565b5b6000611ef189828a016118b8565b9650506020611f0289828a016118b8565b9550506040611f1389828a016118b8565b945050606087013567ffffffffffffffff811115611f3457611f3361186a565b5b611f4089828a01611e98565b935050608087013567ffffffffffffffff811115611f6157611f6061186a565b5b611f6d89828a01611e98565b92505060a087013567ffffffffffffffff811115611f8e57611f8d61186a565b5b611f9a89828a01611e98565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fee57607f821691505b60208210810361200157612000611fa7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026120697fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261202c565b612073868361202c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006120b06120ab6120a684611999565b61208b565b611999565b9050919050565b6000819050919050565b6120ca83612095565b6120de6120d6826120b7565b848454612039565b825550505050565b600090565b6120f36120e6565b6120fe8184846120c1565b505050565b5b81811015612122576121176000826120eb565b600181019050612104565b5050565b601f8211156121675761213881612007565b6121418461201c565b81016020851015612150578190505b61216461215c8561201c565b830182612103565b50505b505050565b600082821c905092915050565b600061218a6000198460080261216c565b1980831691505092915050565b60006121a38383612179565b9150826002028217905092915050565b6121bc82611909565b67ffffffffffffffff8111156121d5576121d4611d9b565b5b6121df8254611fd6565b6121ea828285612126565b600060209050601f83116001811461221d576000841561220b578287015190505b6122158582612197565b86555061227d565b601f19841661222b86612007565b60005b828110156122535784890151825560018201915060208501945060208101905061222e565b86831015612270578489015161226c601f891682612179565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220391a4b6edb068d5106aefee35a25e0666af00577349bd22ac909bacde9d42c9964736f6c63430008110033";

type ProjectsDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProjectsDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProjectsData__factory extends ContractFactory {
  constructor(...args: ProjectsDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ProjectsData> {
    return super.deploy(overrides || {}) as Promise<ProjectsData>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ProjectsData {
    return super.attach(address) as ProjectsData;
  }
  override connect(signer: Signer): ProjectsData__factory {
    return super.connect(signer) as ProjectsData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProjectsDataInterface {
    return new utils.Interface(_abi) as ProjectsDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProjectsData {
    return new Contract(address, _abi, signerOrProvider) as ProjectsData;
  }
}

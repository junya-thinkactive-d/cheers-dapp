/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import type { FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent, PromiseOrValue } from '../../common';

export interface PoolListDataInterface extends utils.Interface {
  functions: {
    "addMyPoolAddress(address,address)": FunctionFragment;
    "getMyPoolAddress(address)": FunctionFragment;
    "getSearchWalletAddress(address)": FunctionFragment;
    "poolList(address)": FunctionFragment;
    "searchWalletAddress(address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addMyPoolAddress"
      | "getMyPoolAddress"
      | "getSearchWalletAddress"
      | "poolList"
      | "searchWalletAddress"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addMyPoolAddress",
    values: [PromiseOrValue<string>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getMyPoolAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSearchWalletAddress",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "poolList",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "searchWalletAddress",
    values: [PromiseOrValue<string>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addMyPoolAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMyPoolAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSearchWalletAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "poolList", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "searchWalletAddress",
    data: BytesLike
  ): Result;

  events: {};
}

export interface PoolListData extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PoolListDataInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined,
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addMyPoolAddress(
      _ownerAddress: PromiseOrValue<string>,
      _poolAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<ContractTransaction>;

    getMyPoolAddress(_ownerAddress: PromiseOrValue<string>, overrides?: CallOverrides): Promise<[string]>;

    getSearchWalletAddress(
      _poolAddres: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    poolList(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    searchWalletAddress(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  addMyPoolAddress(
    _ownerAddress: PromiseOrValue<string>,
    _poolAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> },
  ): Promise<ContractTransaction>;

  getMyPoolAddress(_ownerAddress: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string>;

  getSearchWalletAddress(
    _poolAddres: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  poolList(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  searchWalletAddress(
    arg0: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    addMyPoolAddress(
      _ownerAddress: PromiseOrValue<string>,
      _poolAddress: PromiseOrValue<string>,
      overrides?: CallOverrides,
    ): Promise<void>;

    getMyPoolAddress(_ownerAddress: PromiseOrValue<string>, overrides?: CallOverrides): Promise<string>;

    getSearchWalletAddress(
      _poolAddres: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    poolList(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;

    searchWalletAddress(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    addMyPoolAddress(
      _ownerAddress: PromiseOrValue<string>,
      _poolAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<BigNumber>;

    getMyPoolAddress(_ownerAddress: PromiseOrValue<string>, overrides?: CallOverrides): Promise<BigNumber>;

    getSearchWalletAddress(
      _poolAddres: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    poolList(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    searchWalletAddress(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addMyPoolAddress(
      _ownerAddress: PromiseOrValue<string>,
      _poolAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> },
    ): Promise<PopulatedTransaction>;

    getMyPoolAddress(_ownerAddress: PromiseOrValue<string>, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getSearchWalletAddress(
      _poolAddres: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    poolList(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    searchWalletAddress(
      arg0: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
